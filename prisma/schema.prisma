generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(uuid())
  fullName         String
  email            String        @unique
  password         String?
  dob              DateTime?
  gender           Gender?
  phoneNumber      String?
  role             Role          @default(USER)
  auditLogs        AuditLog[]
  registrationLink String?       @unique
  forms            Form[]
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  DeletedForm      DeletedForm[]
  token            tokens[]

  @@index([email, fullName, dob])
  @@index([email, role])
}

model Form {
  id             String        @id @default(uuid())
  userId         String
  user           User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  status         FormStatus    @default(IN_PROGRESS)
  submissionDate DateTime?
  sections       FormSection[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  FormHistory    FormHistory[]

  @@unique([userId, status])
  @@index([userId, submissionDate])
  @@index([createdAt])
  @@index([updatedAt])
}

model FormSection {
  id          String   @id @default(uuid())
  formId      String
  form        Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  sectionName String
  data        Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([formId, sectionName])
}

model AuditLog {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  action     String // General description of the action (e.g., "Created User", "Deleted Form").
  entityType String // Type of entity affected, e.g., "User", "Form".
  entityId   String? // ID of the affected entity for better traceability (nullable for system-wide actions).
  details    Json? // Optional field for more context or before/after snapshots.
  timestamp  DateTime @default(now())

  @@index([userId])
  @@index([timestamp])
  @@index([entityType, entityId])
}

model DeletedForm {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  deletedAt DateTime @default(now())
  recoverBy DateTime

  @@index([userId, deletedAt])
}

model FormHistory {
  id        String   @id @default(uuid())
  formId    String
  form      Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  updatedBy String // ID of the user/admin who made the changes.
  changes   Json // JSON object detailing the changes made to the form (e.g., {"field": "oldValue", "newValue"}).
  updatedAt DateTime @default(now())

  @@index([formId, updatedAt])
}

enum Gender {
  MALE
  FEMALE
  PREFER_NOT_TO_SAY
}

enum FormStatus {
  IN_PROGRESS
  SUBMITTED
}

enum Role {
  SUPER_ADMIN
  ADMIN
  EDITOR
  VIEWER
  USER
}

model tokens {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token       String   @unique
  type        String
  blacklisted Boolean  @default(false)
  expiresAt   DateTime

  @@index([userId])
  @@index([expiresAt])
}
